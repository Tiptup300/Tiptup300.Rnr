name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --no-restore --configuration Release

    - name: Archive Build Artifacts
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path artifacts
        Copy-Item -Recurse -Force -Path "./Tiptup300.ScriptRunner.ConsoleApplication/bin/Release/net8.0/" -Destination "./artifacts"
        
  test: 
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal --configuration Release

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Run Tests
        shell: pwsh
        run: |
          dotnet test --no-build --verbosity normal --configuration Release

  


  deploy:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'


    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Upload Release Artifact
      id: upload-release
      uses: actions/upload-artifact@v3
      with:
        name: release-artifacts
        path: ./artifacts

    - name: Create GitHub Release
      id: create-release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.0 # Dynamically create version/tag based on your needs
        release_name: Release v1.0.0
        body: "Release notes for v1.0.0"
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./artifacts
        asset_name: artifacts.zip
        asset_content_type: application/zip